{"ast":null,"code":"var _jsxFileName = \"/Users/omkar/Documents/unified resources/mvp/gdrive link opener/video-player-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport ReactPlayer from 'react-player';\nimport screenfull from 'screenfull';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [playing, setPlaying] = useState(false);\n  const [volume, setVolume] = useState(0.5);\n  const [boostVolume, setBoostVolume] = useState(1);\n  const [aspectRatio, setAspectRatio] = useState('16:9');\n  const [fullScreen, setFullScreen] = useState(false);\n  const [fileUrl, setFileUrl] = useState('');\n  const playerRef = useRef(null);\n  const containerRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const gainNodeRef = useRef(null);\n  const sourceRef = useRef(null);\n  useEffect(() => {\n    // Initialize Web Audio API when component mounts\n    audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n    gainNodeRef.current = audioContextRef.current.createGain();\n    gainNodeRef.current.gain.value = 1; // Default to 1x volume (no boost)\n  }, []);\n  const connectAudioNode = () => {\n    if (!sourceRef.current && playerRef.current && playerRef.current.getInternalPlayer()) {\n      const audioSource = audioContextRef.current.createMediaElementSource(playerRef.current.getInternalPlayer());\n      sourceRef.current = audioSource;\n      audioSource.connect(gainNodeRef.current).connect(audioContextRef.current.destination);\n    }\n  };\n\n  // Function to toggle play/pause\n  const handlePlayPause = () => {\n    setPlaying(!playing);\n  };\n\n  // Function to handle volume change\n  const handleVolumeChange = e => {\n    setVolume(parseFloat(e.target.value));\n    gainNodeRef.current.gain.value = parseFloat(e.target.value) * boostVolume;\n  };\n\n  // Function to boost volume\n  const handleBoostVolume = () => {\n    const newBoost = boostVolume >= 2 ? 1 : boostVolume + 0.5;\n    setBoostVolume(newBoost);\n    gainNodeRef.current.gain.value = volume * newBoost;\n  };\n\n  // Function to handle aspect ratio\n  const handleAspectRatio = ratio => {\n    setAspectRatio(ratio);\n  };\n\n  // Function to handle full screen\n  const handleFullScreen = () => {\n    if (screenfull.isEnabled) {\n      screenfull.toggle(containerRef.current);\n    }\n    setFullScreen(!fullScreen);\n  };\n\n  // Function to handle file selection\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setFileUrl(URL.createObjectURL(file));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"video-player-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-picker\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"video/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), fileUrl && /*#__PURE__*/_jsxDEV(ReactPlayer, {\n      ref: playerRef,\n      url: fileUrl,\n      playing: playing,\n      volume: volume,\n      onPlay: connectAudioNode // Connect the audio node when playback starts\n      ,\n      width: \"100%\",\n      height: aspectRatio === '16:9' ? '56.25%' : aspectRatio === '4:3' ? '75%' : '100%',\n      controls: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-button\",\n        onClick: handlePlayPause,\n        children: playing ? 'Pause' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-button\",\n        onClick: () => handleAspectRatio('16:9'),\n        children: \"16:9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-button\",\n        onClick: () => handleAspectRatio('4:3'),\n        children: \"4:3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-button\",\n        onClick: () => handleAspectRatio('1:1'),\n        children: \"1:1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"volume-slider\",\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: volume,\n          onChange: handleVolumeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button boost-button\",\n          onClick: handleBoostVolume,\n          children: [\"Boost Volume (\", boostVolume, \"x)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-button\",\n        onClick: handleFullScreen,\n        children: fullScreen ? 'Exit Fullscreen' : 'Fullscreen'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ChfAeP8Tw1HNNR7GbL9umJRLbl0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ReactPlayer","screenfull","jsxDEV","_jsxDEV","App","_s","playing","setPlaying","volume","setVolume","boostVolume","setBoostVolume","aspectRatio","setAspectRatio","fullScreen","setFullScreen","fileUrl","setFileUrl","playerRef","containerRef","audioContextRef","gainNodeRef","sourceRef","current","window","AudioContext","webkitAudioContext","createGain","gain","value","connectAudioNode","getInternalPlayer","audioSource","createMediaElementSource","connect","destination","handlePlayPause","handleVolumeChange","e","parseFloat","target","handleBoostVolume","newBoost","handleAspectRatio","ratio","handleFullScreen","isEnabled","toggle","handleFileChange","file","files","URL","createObjectURL","ref","className","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","url","onPlay","width","height","controls","onClick","min","max","step","_c","$RefreshReg$"],"sources":["/Users/omkar/Documents/unified resources/mvp/gdrive link opener/video-player-app/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport ReactPlayer from 'react-player';\nimport screenfull from 'screenfull';\nimport './App.css';\n\nconst App = () => {\n  const [playing, setPlaying] = useState(false);\n  const [volume, setVolume] = useState(0.5);\n  const [boostVolume, setBoostVolume] = useState(1);\n  const [aspectRatio, setAspectRatio] = useState('16:9');\n  const [fullScreen, setFullScreen] = useState(false);\n  const [fileUrl, setFileUrl] = useState('');\n  const playerRef = useRef(null);\n  const containerRef = useRef(null);\n\n  const audioContextRef = useRef(null);\n  const gainNodeRef = useRef(null);\n  const sourceRef = useRef(null);\n\n  useEffect(() => {\n    // Initialize Web Audio API when component mounts\n    audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n    gainNodeRef.current = audioContextRef.current.createGain();\n    gainNodeRef.current.gain.value = 1; // Default to 1x volume (no boost)\n  }, []);\n\n  const connectAudioNode = () => {\n    if (!sourceRef.current && playerRef.current && playerRef.current.getInternalPlayer()) {\n      const audioSource = audioContextRef.current.createMediaElementSource(playerRef.current.getInternalPlayer());\n      sourceRef.current = audioSource;\n      audioSource.connect(gainNodeRef.current).connect(audioContextRef.current.destination);\n    }\n  };\n\n  // Function to toggle play/pause\n  const handlePlayPause = () => {\n    setPlaying(!playing);\n  };\n\n  // Function to handle volume change\n  const handleVolumeChange = (e) => {\n    setVolume(parseFloat(e.target.value));\n    gainNodeRef.current.gain.value = parseFloat(e.target.value) * boostVolume;\n  };\n\n  // Function to boost volume\n  const handleBoostVolume = () => {\n    const newBoost = boostVolume >= 2 ? 1 : boostVolume + 0.5;\n    setBoostVolume(newBoost);\n    gainNodeRef.current.gain.value = volume * newBoost;\n  };\n\n  // Function to handle aspect ratio\n  const handleAspectRatio = (ratio) => {\n    setAspectRatio(ratio);\n  };\n\n  // Function to handle full screen\n  const handleFullScreen = () => {\n    if (screenfull.isEnabled) {\n      screenfull.toggle(containerRef.current);\n    }\n    setFullScreen(!fullScreen);\n  };\n\n  // Function to handle file selection\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setFileUrl(URL.createObjectURL(file));\n    }\n  };\n\n  return (\n    <div ref={containerRef} className=\"video-player-container\">\n      {/* File Picker */}\n      <div className=\"file-picker\">\n        <input type=\"file\" accept=\"video/*\" onChange={handleFileChange} />\n      </div>\n\n      {/* Video Player */}\n      {fileUrl && (\n        <ReactPlayer\n          ref={playerRef}\n          url={fileUrl}\n          playing={playing}\n          volume={volume}\n          onPlay={connectAudioNode} // Connect the audio node when playback starts\n          width=\"100%\"\n          height={aspectRatio === '16:9' ? '56.25%' : aspectRatio === '4:3' ? '75%' : '100%'}\n          controls={false}\n        />\n      )}\n\n      {/* Controls */}\n      <div className=\"controls\">\n        <button className=\"control-button\" onClick={handlePlayPause}>\n          {playing ? 'Pause' : 'Play'}\n        </button>\n\n        <button className=\"control-button\" onClick={() => handleAspectRatio('16:9')}>16:9</button>\n        <button className=\"control-button\" onClick={() => handleAspectRatio('4:3')}>4:3</button>\n        <button className=\"control-button\" onClick={() => handleAspectRatio('1:1')}>1:1</button>\n\n        <div className=\"volume-container\">\n          <input\n            className=\"volume-slider\"\n            type=\"range\"\n            min=\"0\"\n            max=\"1\"\n            step=\"0.01\"\n            value={volume}\n            onChange={handleVolumeChange}\n          />\n          <button className=\"control-button boost-button\" onClick={handleBoostVolume}>Boost Volume ({boostVolume}x)</button>\n        </div>\n\n        <button className=\"control-button\" onClick={handleFullScreen}>\n          {fullScreen ? 'Exit Fullscreen' : 'Fullscreen'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}