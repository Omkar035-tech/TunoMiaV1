{"ast":null,"code":"var _jsxFileName = \"/Users/omkar/Documents/unified resources/mvp/gdrive link opener/video-player-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport ReactPlayer from 'react-player';\nimport screenfull from 'screenfull';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [playing, setPlaying] = useState(false);\n  const [volume, setVolume] = useState(0.5);\n  const [boostVolume, setBoostVolume] = useState(1);\n  const [aspectRatio, setAspectRatio] = useState('16:9');\n  const [fullScreen, setFullScreen] = useState(false);\n  const [fileUrl, setFileUrl] = useState('');\n  const [inputUrl, setInputUrl] = useState('');\n  const playerRef = useRef(null);\n  const containerRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const gainNodeRef = useRef(null);\n  const sourceRef = useRef(null);\n  useEffect(() => {\n    audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n    gainNodeRef.current = audioContextRef.current.createGain();\n    gainNodeRef.current.gain.value = 1;\n  }, []);\n  const connectAudioNode = () => {\n    if (!sourceRef.current && playerRef.current && playerRef.current.getInternalPlayer()) {\n      const audioSource = audioContextRef.current.createMediaElementSource(playerRef.current.getInternalPlayer());\n      sourceRef.current = audioSource;\n      audioSource.connect(gainNodeRef.current).connect(audioContextRef.current.destination);\n    }\n  };\n  const handlePlayPause = () => {\n    setPlaying(!playing);\n  };\n  const handleVolumeChange = e => {\n    setVolume(parseFloat(e.target.value));\n    gainNodeRef.current.gain.value = parseFloat(e.target.value) * boostVolume;\n  };\n  const handleBoostVolume = () => {\n    const newBoost = boostVolume >= 2 ? 1 : boostVolume + 0.5;\n    setBoostVolume(newBoost);\n    gainNodeRef.current.gain.value = volume * newBoost;\n  };\n  const handleAspectRatio = ratio => {\n    setAspectRatio(ratio);\n  };\n  const handleFullScreen = () => {\n    if (screenfull.isEnabled) {\n      screenfull.toggle(containerRef.current);\n    }\n    setFullScreen(!fullScreen);\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setFileUrl(URL.createObjectURL(file));\n    }\n  };\n  const handleInputUrlChange = e => {\n    setInputUrl(e.target.value);\n  };\n  const handlePlayUrl = () => {\n    if (inputUrl) {\n      const modifiedUrl = modifyGoogleDriveUrl(inputUrl);\n      setFileUrl(modifiedUrl);\n    }\n  };\n  const modifyGoogleDriveUrl = url => {\n    // Function to convert Google Drive view link to a direct download link\n    const driveUrlRegex = /https:\\/\\/drive\\.google\\.com\\/file\\/d\\/(.*?)\\/view/;\n    const match = url.match(driveUrlRegex);\n    if (match && match[1]) {\n      return `https://drive.google.com/uc?export=download&id=${match[1]}`;\n    }\n    return url; // Return the same URL for regular video links\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"video-player-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-picker\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"video/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"url-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter video URL or Google Drive link\",\n          value: inputUrl,\n          onChange: handleInputUrlChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePlayUrl,\n          children: \"Play URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), fileUrl && /*#__PURE__*/_jsxDEV(ReactPlayer, {\n      ref: playerRef,\n      url: fileUrl,\n      playing: playing,\n      volume: volume,\n      onPlay: connectAudioNode,\n      width: \"100%\",\n      height: aspectRatio === '16:9' ? '56.25%' : aspectRatio === '4:3' ? '75%' : '100%',\n      controls: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-button\",\n        onClick: handlePlayPause,\n        children: playing ? 'Pause' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-button\",\n        onClick: () => handleAspectRatio('16:9'),\n        children: \"16:9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-button\",\n        onClick: () => handleAspectRatio('4:3'),\n        children: \"4:3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-button\",\n        onClick: () => handleAspectRatio('1:1'),\n        children: \"1:1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"volume-slider\",\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: volume,\n          onChange: handleVolumeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button boost-button\",\n          onClick: handleBoostVolume,\n          children: [\"Boost Volume (\", boostVolume, \"x)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-button\",\n        onClick: handleFullScreen,\n        children: fullScreen ? 'Exit Fullscreen' : 'Fullscreen'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"w73P+1QV6Fw9JVIMbvUXb9N7iQg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ReactPlayer","screenfull","jsxDEV","_jsxDEV","App","_s","playing","setPlaying","volume","setVolume","boostVolume","setBoostVolume","aspectRatio","setAspectRatio","fullScreen","setFullScreen","fileUrl","setFileUrl","inputUrl","setInputUrl","playerRef","containerRef","audioContextRef","gainNodeRef","sourceRef","current","window","AudioContext","webkitAudioContext","createGain","gain","value","connectAudioNode","getInternalPlayer","audioSource","createMediaElementSource","connect","destination","handlePlayPause","handleVolumeChange","e","parseFloat","target","handleBoostVolume","newBoost","handleAspectRatio","ratio","handleFullScreen","isEnabled","toggle","handleFileChange","file","files","URL","createObjectURL","handleInputUrlChange","handlePlayUrl","modifiedUrl","modifyGoogleDriveUrl","url","driveUrlRegex","match","ref","className","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onClick","onPlay","width","height","controls","min","max","step","_c","$RefreshReg$"],"sources":["/Users/omkar/Documents/unified resources/mvp/gdrive link opener/video-player-app/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport ReactPlayer from 'react-player';\nimport screenfull from 'screenfull';\nimport './App.css';\n\nconst App = () => {\n  const [playing, setPlaying] = useState(false);\n  const [volume, setVolume] = useState(0.5);\n  const [boostVolume, setBoostVolume] = useState(1);\n  const [aspectRatio, setAspectRatio] = useState('16:9');\n  const [fullScreen, setFullScreen] = useState(false);\n  const [fileUrl, setFileUrl] = useState('');\n  const [inputUrl, setInputUrl] = useState('');\n\n  const playerRef = useRef(null);\n  const containerRef = useRef(null);\n\n  const audioContextRef = useRef(null);\n  const gainNodeRef = useRef(null);\n  const sourceRef = useRef(null);\n\n  useEffect(() => {\n    audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n    gainNodeRef.current = audioContextRef.current.createGain();\n    gainNodeRef.current.gain.value = 1;\n  }, []);\n\n  const connectAudioNode = () => {\n    if (!sourceRef.current && playerRef.current && playerRef.current.getInternalPlayer()) {\n      const audioSource = audioContextRef.current.createMediaElementSource(playerRef.current.getInternalPlayer());\n      sourceRef.current = audioSource;\n      audioSource.connect(gainNodeRef.current).connect(audioContextRef.current.destination);\n    }\n  };\n\n  const handlePlayPause = () => {\n    setPlaying(!playing);\n  };\n\n  const handleVolumeChange = (e) => {\n    setVolume(parseFloat(e.target.value));\n    gainNodeRef.current.gain.value = parseFloat(e.target.value) * boostVolume;\n  };\n\n  const handleBoostVolume = () => {\n    const newBoost = boostVolume >= 2 ? 1 : boostVolume + 0.5;\n    setBoostVolume(newBoost);\n    gainNodeRef.current.gain.value = volume * newBoost;\n  };\n\n  const handleAspectRatio = (ratio) => {\n    setAspectRatio(ratio);\n  };\n\n  const handleFullScreen = () => {\n    if (screenfull.isEnabled) {\n      screenfull.toggle(containerRef.current);\n    }\n    setFullScreen(!fullScreen);\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setFileUrl(URL.createObjectURL(file));\n    }\n  };\n\n  const handleInputUrlChange = (e) => {\n    setInputUrl(e.target.value);\n  };\n\n  const handlePlayUrl = () => {\n    if (inputUrl) {\n      const modifiedUrl = modifyGoogleDriveUrl(inputUrl);\n      setFileUrl(modifiedUrl);\n    }\n  };\n\n  const modifyGoogleDriveUrl = (url) => {\n    // Function to convert Google Drive view link to a direct download link\n    const driveUrlRegex = /https:\\/\\/drive\\.google\\.com\\/file\\/d\\/(.*?)\\/view/;\n    const match = url.match(driveUrlRegex);\n    if (match && match[1]) {\n      return `https://drive.google.com/uc?export=download&id=${match[1]}`;\n    }\n    return url; // Return the same URL for regular video links\n  };\n\n  return (\n    <div ref={containerRef} className=\"video-player-container\">\n      {/* File Picker */}\n      <div className=\"file-picker\">\n        <input type=\"file\" accept=\"video/*\" onChange={handleFileChange} />\n        <div className=\"url-input-container\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter video URL or Google Drive link\"\n            value={inputUrl}\n            onChange={handleInputUrlChange}\n          />\n          <button onClick={handlePlayUrl}>Play URL</button>\n        </div>\n      </div>\n\n      {/* Video Player */}\n      {fileUrl && (\n        <ReactPlayer\n          ref={playerRef}\n          url={fileUrl}\n          playing={playing}\n          volume={volume}\n          onPlay={connectAudioNode}\n          width=\"100%\"\n          height={aspectRatio === '16:9' ? '56.25%' : aspectRatio === '4:3' ? '75%' : '100%'}\n          controls={false}\n        />\n      )}\n\n      {/* Controls */}\n      <div className=\"controls\">\n        <button className=\"control-button\" onClick={handlePlayPause}>\n          {playing ? 'Pause' : 'Play'}\n        </button>\n\n        <button className=\"control-button\" onClick={() => handleAspectRatio('16:9')}>16:9</button>\n        <button className=\"control-button\" onClick={() => handleAspectRatio('4:3')}>4:3</button>\n        <button className=\"control-button\" onClick={() => handleAspectRatio('1:1')}>1:1</button>\n\n        <div className=\"volume-container\">\n          <input\n            className=\"volume-slider\"\n            type=\"range\"\n            min=\"0\"\n            max=\"1\"\n            step=\"0.01\"\n            value={volume}\n            onChange={handleVolumeChange}\n          />\n          <button className=\"control-button boost-button\" onClick={handleBoostVolume}>\n            Boost Volume ({boostVolume}x)\n          </button>\n        </div>\n\n        <button className=\"control-button\" onClick={handleFullScreen}>\n          {fullScreen ? 'Exit Fullscreen' : 'Fullscreen'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}